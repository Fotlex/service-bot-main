# Generated by Django 5.2.1 on 2025-08-15 06:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('panel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActualModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(verbose_name='Модель кондиционера')),
                ('type', models.CharField(choices=[('byt', 'Бытовые'), ('prom', 'Промышленные'), ('mult', 'Мультизональное оборудование')], default='byt', verbose_name='Тип кондиционера')),
            ],
        ),
        migrations.CreateModel(
            name='ErrorCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(verbose_name='Код ошибки')),
                ('manual', models.FileField(blank=True, null=True, upload_to='web/media/manuals', verbose_name='Мануал по починке')),
                ('file_id', models.CharField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manager_id', models.BigIntegerField(blank=True, null=True, verbose_name='Телеграм ID менеджера')),
                ('act', models.FileField(blank=True, null=True, upload_to='web/media/acts', verbose_name='Акт о неисправности')),
                ('file_id', models.CharField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Настройки',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='company_address',
            field=models.CharField(blank=True, null=True, verbose_name='Адрес компании'),
        ),
        migrations.AddField(
            model_name='user',
            name='company_name',
            field=models.CharField(blank=True, null=True, verbose_name='Название компании'),
        ),
        migrations.AddField(
            model_name='user',
            name='email',
            field=models.CharField(blank=True, null=True, verbose_name='Адрес электронной почты'),
        ),
        migrations.AddField(
            model_name='user',
            name='fio',
            field=models.CharField(blank=True, null=True, verbose_name='ФИО'),
        ),
        migrations.AddField(
            model_name='user',
            name='phone_number',
            field=models.CharField(blank=True, null=True, verbose_name='Номер телефона для связи'),
        ),
        migrations.AlterField(
            model_name='attachments',
            name='file',
            field=models.FileField(upload_to='web/media/mailing', verbose_name='Файл'),
        ),
        migrations.CreateModel(
            name='GreeModel',
            fields=[
                ('actualmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='panel.actualmodel')),
            ],
            options={
                'verbose_name': 'Модель Gree',
                'verbose_name_plural': 'Модели Gree',
            },
            bases=('panel.actualmodel',),
        ),
        migrations.CreateModel(
            name='KitanoModel',
            fields=[
                ('actualmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='panel.actualmodel')),
            ],
            options={
                'verbose_name': 'Модель Kitano',
                'verbose_name_plural': 'Модели Kitano',
            },
            bases=('panel.actualmodel',),
        ),
        migrations.CreateModel(
            name='RoverModel',
            fields=[
                ('actualmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='panel.actualmodel')),
            ],
            options={
                'verbose_name': 'Модель Rover',
                'verbose_name_plural': 'Модели Rover',
            },
            bases=('panel.actualmodel',),
        ),
        migrations.CreateModel(
            name='GreeErrorCode',
            fields=[
                ('errorcode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='panel.errorcode')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='error_codes', to='panel.greemodel')),
            ],
            options={
                'verbose_name': 'Ошибка Gree',
                'verbose_name_plural': 'Ошибки Gree',
            },
            bases=('panel.errorcode',),
        ),
        migrations.CreateModel(
            name='KitanoErrorCode',
            fields=[
                ('errorcode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='panel.errorcode')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='error_codes', to='panel.kitanomodel')),
            ],
            options={
                'verbose_name': 'Ошибка Kitano',
                'verbose_name_plural': 'Ошибки Kitano',
            },
            bases=('panel.errorcode',),
        ),
        migrations.CreateModel(
            name='RoverErrorCode',
            fields=[
                ('errorcode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='panel.errorcode')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='error_codes', to='panel.rovermodel')),
            ],
            options={
                'verbose_name': 'Ошибка Rover',
                'verbose_name_plural': 'Ошибки Rover',
            },
            bases=('panel.errorcode',),
        ),
    ]
